name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  formatting:
    name: 'Check Formatting'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - name: cargo fmt
        run: |
          cargo fmt --all -- --check
  linting:
    name: 'Linting'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - name: cargo clippy
        run: |
          cargo clippy -- --D warnings

  build_and_publish_api:
    name: 'Build and Publish: API'
    if: github.ref == 'refs/heads/main'
    needs: [formatting, linting]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE }}
      - name: Get short commit hash for image tag
        id: shortened_hash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/jflessau/mail-bouncer:latest
            ghcr.io/jflessau/mail-bouncer:${{ steps.shortened_hash.outputs.sha_short }}
